<?xml version="1.0" encoding="UTF-8"?>
<!-- deplacement du fichier dans web-inf car spring l'attent la -->
<!-- ajout de ce fichier en faisont dans src/main/resources clic droit ->new 
	->other -> xmlFile -> Application-servlet.xml -> -->

<!-- tous le conteneur de bean spring -->

<!-- https://docs.spring.io/spring/docs/5.0.5.RELEASE/spring-framework-reference/core.html#spring-core -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd       
   		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd ">
	<!-- ajout des information du controler -->


	<!-- ajout du context -->
	<context:component-scan base-package="fr.gtm.bibliotheque.controller" />
	
	<!--  pour dire à spring que toute les demandes commencent par js ou css ou images sont des demande static et donc qu'il n'y a pas de traitement a effectuer -->
	<mvc:resources location="/js/" mapping="/js/**"></mvc:resources>
	<mvc:resources location="/css/" mapping="/css/**"></mvc:resources>
	<mvc:resources location="/images/" mapping="/images/**"></mvc:resources>

	<!-- bean metier basique -->

	<!-- ajout constructeur pour les classes domaines -->
	<bean id="livre" class="fr.gtm.bibliotheque.domain.Livre">

		<!-- on met les constructeur-arg dans l'ordre du constructeur -->
		<constructor-arg type="Integer" value="0" />
		<constructor-arg type="String" value="Le livre du coeur" />
		<constructor-arg type="String" value="Hedi Ines" />
		<constructor-arg type="String" value="J'ai lue" />
		<constructor-arg type="String" value="comedie" />
		<constructor-arg type="String"
			value="Si tu ne comprends pas, ou ne maîtrises pas, 
			la notion de coefficient binomial, inutile de chercher 
			à calculer toi-même les nombres de Catalan, que tu découvris 
			dans cette obscure revue américaine d'algèbre, croyant qu'il 
			s'agissait de “nombres catalans” (l'anglais Catalan numbers est 
			équivoque), avant de faire le chemin historique et de découvrir 
			qu'ils auraient tout aussi bien pu se nommer suite d'Euler, entiers 
			de Seger, ou nombres de Ming Antu." />
	</bean>

	<!-- beans de configuration spring: object premettant de resoudre les noms 
		de vues (modeland vew) en page jsp -->

	<!-- controle shift t pour voir les -->

	<!-- classe qui sert à resoudre les vues ( aller cherche les vue qui sont 
		cacher dans le dossier web-inf qui est un ficheir proteger -->

	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- racine du fichier -->
		<property name="prefix" value="/WEB-INF/views/"></property>
		<!-- fin du fichier -->
		<property name="suffix" value=".jsp"></property>
		<!-- moteur de classe classe jsltview pour tous les classe de jstl -->
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView"></property>
	</bean>

</beans>



